template: true
valuesFilePath: ./values.yml

resources:
  - name: {{ .Values.gitRepo.name }}
    type: GitRepo
    configuration:
      gitProvider: {{ .Values.gitRepo.provider }}
      path: {{ .Values.gitRepo.path }}
      # branches:
      #   include: {{ .Values.myRepo.branch }}

  - name: {{ .Values.docker.image.resourceName }}
    type: Image
    configuration:
      registry: {{ .Values.artifactory }}
      sourceRepository: {{ .Values.artifactoryRepo.target.name }}
      imageName: {{ .Values.docker.image.name }}
      imageTag: {{ .Values.docker.image.tag }}
      autoPull: true
      
  - name: {{ .Values.pipelines.name }}
    type: BuildInfo
    configuration:
      sourceArtifactory: {{ .Values.artifactory }}

  # - name: "{{ .Values.pipelines.name }}_promoted"
  #   type: BuildInfo
  #   configuration:
  #     sourceArtifactory: {{ .Values.artifactory }}      

pipelines:
  - name: {{ .Values.pipelines.name }}
    steps:
      - name: docker_build
        type: DockerBuild
        configuration:
          affinityGroup: {{ .Values.pipelines.name }}
          dockerFileLocation: {{ .Values.docker.file.location }}
          dockerFileName: {{ .Values.docker.file.name }}
          dockerImageName: {{ .Values.docker.image.name }}
          dockerImageTag: ${run_number}
          inputResources:
            - name: {{ .Values.gitRepo.name }}
          integrations:
            - name: {{ .Values.artifactory }}
        execution:
          onStart:
            - echo "[TM] manually login to artifactory"
            - echo ${int_{{ .Values.artifactory }}_apikey} | docker login --username {{ .Values.artifactoryRepo.username }} --password-stdin ${int_{{ .Values.artifactory }}_url}

      - name: docker_push
        type: DockerPush
        configuration:
          affinityGroup: {{ .Values.pipelines.name }}
          targetRepository: {{ .Values.artifactoryRepo.target.name }}
          integrations:
            - name: {{ .Values.artifactory }}
          inputSteps:
            - name: docker_build
          outputResources:
            - name: {{ .Values.docker.image.resourceName }}

      - name: publish_build_info
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: docker_push
          outputResources:
            - name: {{ .Values.pipelines.name }}

      # - name: promote_build
      #   type: PromoteBuild
      #   configuration:
      #     targetRepository: {{ .Values.artifactoryRepo.promote.name }}
      #     integrations:
      #       - name: {{ .Values.artifactory }}
      #     inputResources:
      #       - name: {{ .Values.pipelines.name }}
      #     outputResources:
      #       - name: "{{ .Values.pipelines.name }}_promoted"
